services:
  postgres:
    build: .
    container_name: postgresql-maximalism
    environment:
      - POSTGRES_USER=${PGUSER}
      - POSTGRES_PASSWORD=${PGPASSWORD}
      - POSTGRES_DB=${PGDATABASE}
    command: >
      postgres
        -c shared_preload_libraries="timescaledb,pg_search"
        -c cron.database_name="${PGDATABASE}"
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${PGUSER}"]
      interval: 10s
      retries: 5
    restart: unless-stopped

  whodb:
    image: clidey/whodb:0.53.0
    container_name: whodb
    ports:
      - "8080:8080"
    restart: unless-stopped

  minio:
    image: minio/minio:RELEASE.2025-04-22T22-12-26Z
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    volumes:
      - minio:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      retries: 5
    restart: unless-stopped
    command: server /data --console-address ":9001"

  minio-mc:
    image: minio/mc:RELEASE.2025-04-16T18-13-26Z
    container_name: minio-mc
    depends_on:
      minio:
        condition: service_healthy
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_BUCKET_NAME=${MINIO_BUCKET_NAME}
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set minio http://minio:9000 $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD;
      /usr/bin/mc mb --ignore-existing minio/${MINIO_BUCKET_NAME};
      "
    restart: no

  ollama:
    image: ollama/ollama
    container_name: ollama
    ports:
      - "11434:11434"
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
    runtime: nvidia
    restart: unless-stopped

  pgai-worker:
    image: timescale/pgai-vectorizer-worker:v0.9.2
    container_name: pgai-worker
    depends_on:
      - ollama
    environment:
      - PGAI_VECTORIZER_WORKER_DB_URL=postgres://${PGUSER}:${PGPASSWORD}@postgres:5432/${PGDATABASE}
      - OLLAMA_HOST=http://ollama:11434
    command: [ "--poll-interval", "5s" ]
    restart: unless-stopped

volumes:
  pg_data:
  minio:
